name: CI Pipeline

on:
  push:
    branches:
      - main
      - master
      - develop
  pull_request:
    branches:
      - main
      - master
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Grant execute permission to Gradle wrapper
        run: chmod +x gradlew  # Fixes the permission error

      - name: Build project
        run: ./gradlew assemble

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            build/libs/
            build/classes/


  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Run tests
        run: ./gradlew test jacocoTestReport

      - name: Upload test coverage report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: build/reports/jacoco/test/jacocoTestReport.xml

  sonarqube-check:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Run SonarQube analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: ./gradlew build sonar --info
        continue-on-error: true

  sonarqube-vulnerability-report:
    runs-on: ubuntu-latest
    needs: sonarqube-check
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch SonarQube vulnerability report
        run: |
          curl -u "${{ secrets.SONAR_TOKEN }}:" "${{ env.SONAR_HOST_URL }}/api/issues/gitlab_sast_export?projectKey=FitnessApp&branch=${GITHUB_REF_NAME}" -o gl-sast-sonar-report.json
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        continue-on-error: true

      - name: Upload SonarQube vulnerability report
        uses: actions/upload-artifact@v4
        with:
          name: sonar-vulnerability-report
          path: gl-sast-sonar-report.json

  deploy:
    runs-on: ubuntu-latest
    needs: sonarqube-vulnerability-report
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy using Docker Compose
        run: docker-compose up --build -d

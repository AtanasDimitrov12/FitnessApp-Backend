name: CI Pipeline

on:
  push:
    branches:
      - main
      - master
      - develop
  pull_request:
    branches:
      - main
      - master
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Grant execute permission to Gradle wrapper
        run: chmod +x gradlew  # Fixes the permission error

      - name: Build project
        run: ./gradlew assemble

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            build/libs/
            build/classes/


  test:  # âœ… Correct indentation (test is at the same level as build)
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Grant execute permission to Gradle wrapper  # Fix for permission error
        run: chmod +x gradlew

      - name: Run tests
        run: ./gradlew test jacocoTestReport

      - name: Upload test coverage report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: build/reports/jacoco/test/jacocoTestReport.xml

  sonarqube-check:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Grant execute permission to Gradle wrapper  # Prevents permission errors
        run: chmod +x gradlew

      - name: Debug Environment Variables
        run: |
          echo "SONAR_HOST_URL: ${{ secrets.SONARQUBE_HOST_URL }}"
          echo "SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}" | sed 's/./*/g'  # Mask token

      - name: Run SonarQube analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONARQUBE_HOST_URL }}
        run: ./gradlew sonarqube --info || true  # Avoids immediate failure



  sonarqube-vulnerability-report:
    runs-on: ubuntu-latest
    needs: sonarqube-check
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Wait for SonarQube to process results
        run: sleep 30  # Ensures SonarQube has time to generate the report

      - name: Fetch SonarQube vulnerability report
        run: |
          curl -u "${{ secrets.SONARQUBE_TOKEN }}:" \
          "${{ secrets.SONARQUBE_HOST_URL }}/api/issues/gitlab_sast_export?projectKey=FitnessApp&branch=${GITHUB_REF_NAME}" \
          -o gl-sast-sonar-report.json
        env:
          SONARQUBE_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
          SONARQUBE_HOST_URL: ${{ secrets.SONARQUBE_HOST_URL }}
        continue-on-error: true

      - name: Upload SonarQube vulnerability report
        uses: actions/upload-artifact@v4
        with:
          name: sonar-vulnerability-report
          path: gl-sast-sonar-report.json



  deploy:
    runs-on: ubuntu-latest
    needs: sonarqube-vulnerability-report
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Docker and Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get remove -y containerd
          sudo apt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
          sudo chmod 666 /var/run/docker.sock
          docker --version
          docker compose version  # New syntax for Docker Compose

      - name: Deploy using Docker Compose
        run: docker compose up --build -d



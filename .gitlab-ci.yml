variables:
  SONAR_HOST_URL: "http://localhost:9000"
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
  GIT_DEPTH: "0"

stages:
  - build
  - test
  - sonarqube-check
  - sonarqube-vulnerability-report
  - deploy

build:
  stage: build
  script:
    - ./gradlew assemble
    - ls -l build/libs/
  artifacts:
    paths:
      - build/libs/
      - build/classes/

test:
  stage: test
  script:
    - ./gradlew test

sonarqube-check:
  stage: sonarqube-check
  script:
    - echo "127.0.0.1 host.docker.internal" | sudo tee -a /etc/hosts  # Map host.docker.internal for Linux
    - echo "Waiting for SonarQube to initialize..."
    - sleep 30
    - ./gradlew sonarqube -Dsonar.host.url=$SONAR_HOST_URL
  allow_failure: true
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_COMMIT_BRANCH == 'main'
    - if: $CI_COMMIT_BRANCH == 'develop'



sonarqube-vulnerability-report:
  stage: sonarqube-vulnerability-report
  script:
    - '$headers = @{ "Authorization" = "Basic $( [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes("${SONAR_TOKEN}:")) )" }'
    - 'Invoke-RestMethod -Uri "${SONAR_HOST_URL}/api/issues/gitlab_sast_export?projectKey=FitnessApp&branch=${CI_COMMIT_BRANCH}&pullRequest=${CI_MERGE_REQUEST_IID}" -Headers $headers -OutFile gl-sast-sonar-report.json'
  allow_failure: true
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_COMMIT_BRANCH == 'main'
    - if: $CI_COMMIT_BRANCH == 'develop'
  artifacts:
    expire_in: 1 day
    reports:
      sast: gl-sast-sonar-report.json

deploy:
  stage: deploy
  script:
    - docker-compose up --build -d
